Bootstrap: library
From: ubuntu:20.04
Stage: build

%setup
mkdir -p ${SINGULARITY_ROOTFS}/opt
cd ${SINGULARITY_ROOTFS}/opt
git clone https://github.com/delta9000/websockify.git
cd websockify
git checkout port_file_feature
cd ${SINGULARITY_ROOTFS}/opt
wget https://github.com/novnc/noVNC/archive/refs/tags/v1.2.0.tar.gz
tar xvf v1.2.0.tar.gz

%files
    services.conf 
    supervisor.conf 

%environment
    export LC_ALL=C
    export DISPLAY=:999

%post
    export DEBIAN_FRONTEND=noninteractive
    echo deb http://us.archive.ubuntu.com/ubuntu focal universe >> /etc/apt/sources.list
    apt-get update && apt-get install --no-install-recommends -y ca-certificates python3 python3-setuptools tigervnc-standalone-server openbox supervisor ssh xauth tigervnc-common xxd xterm
    cd /opt/websockify
    python3 setup.py install
    BUULD_DATE=`date`
    echo "export BUILD_DATE=\"${NOW}\"" >> $SINGULARITY_ENVIRONMENT
    mv /services.conf /etc/supervisor/conf.d/services.conf
    mv /supervisor.conf /etc/supervisor/supervisord.conf

%runscript
    #!/bin/bash
    function ctrl_c() {
        [[ -e /tmp/supervisord.pid ]] || kill -s SIGINT $(cat /tmp/supervisord.pid)
    }
    
    trap ctrl_c INT
    export DISPLAY=:999
    export XAUTHORITY=/tmp/.Xauthority
    touch /tmp/.Xauthority
    xauth add ${HOST}:999 . $(xxd -l 16 -p /dev/urandom)
    [[ ! -z "${PASSWORD}" ]] || export PASSWORD=password 
    bash -c 'printf "%s\n%s\n\n" $PASSWORD $PASSWORD | vncpasswd /tmp/.vncpasswd'  &> /dev/null
    chmod 600 /tmp/.vncpasswd
    supervisord -n &> /dev/null &
    while [ ! -e /tmp/supervisor.sock ]; do sleep 1; done
    supervisorctl start Xvnc
    while [ ! -e /tmp/.X11-unix/X999 ]; do sleep 1; done
    chmod 600 /tmp/.X11-unix/X999 && chmod 600 /tmp/.vncsocket
    supervisorctl start websockify
    sleep 1
    supervisorctl start openbox
    sleep 1
    [[ -z "${HOST_X_COMMAND}" ]] || supervisorctl start host_x_command
    sleep 5
    printf "Connect to http://localhost:%s/vnc.html?autoconnect=true&password=%s&resize=remote\n\n" `cat /tmp/.novncport` $PASSWORD
    printf "Waiting for supervisord to exit \nkill -s SIGINT %s to stop services gracefully, close the windowmanager in the vnc session, or CTRL+C in this terminal\n" $(cat /tmp/supervisord.pid)
    wait $(cat /tmp/supervisord.pid)

%test
    grep -q NAME=\"Ubuntu\" /etc/os-release
    if [ $? -eq 0 ]; then
        echo "Container base is Ubuntu as expected."
    else
        echo "Container base is not Ubuntu."
    fi

%labels
    Author bsandbro@vt.edu
    Version v0.0.1

%help
    This container wraps an Xvnc server with an openbox window manager and exposes 
    a noVNC server on a random ephemeral port
